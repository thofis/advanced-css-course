* {
  margin: 0;
  padding: 0;
}

// yellow color
$color-primary: #f9ed69;
$color-tertiary: #b83b5e;
$color-secondary: #f08a5d;
$color-text-dark: #333;
$color-text-light: #eee;

$width-button: 150px;

// mixin for reuse
@mixin clearfix {
  &::after {
    content: "";
    clear: both;
    display: table;
  }
}

// mixin with parameter
@mixin style-link-text($col) {
  text-decoration: none;
  text-transform: uppercase;
  color: $col;
}

@function divide($a, $b) {
  @return $a/$b;
}

nav {
  margin: divide(60,2) * 1px;
  background-color: $color-primary;

  // applying a mixin
  @include clearfix;
}


.navigation {
  list-style: none;
  float:left;

  // nested selector
  li {
    display: inline-block;
    margin-left: 30px;

    &:first-child {
      margin: 0;
    }

    a {
      @include style-link-text($color-text-dark);
    }
  }
}

.buttons {
  float: right;

}


// extends for separating out common code
// rules in mixins are just copied into their usage place (like macros)
// extends creates a new combined declaration
// mixins are recommended in most practical cases
%btn-placeholder {
  padding: 10px;
  display: inline-block;
  text-align: center;
  border-radius: 100px;
  width: $width-button;
  @include style-link-text($color-text-light);
}


.btn-main {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-secondary;
  }
  &:hover {
    background-color: lighten($color-secondary, 15%);
  }
}

.btn-hot {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-tertiary;
  }
  &:hover {
    background-color: darken($color-tertiary, 15%);
  }
}